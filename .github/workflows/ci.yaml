name: ci
on:
  pull_request:
concurrency:
  group: ci-${{ github.workflow }}-${{ github.event.pull_request.number || github.sha }}
  cancel-in-progress: true
jobs:
  format:
    runs-on: ubuntu-latest
    if: "!contains(github.event.head_commit.message, '[skip ci]')"
    steps:
      - name: Git checkout
        uses: actions/checkout@v4
      - name: Setup Rust
        uses: ./.github/actions/rust-setup
        with:
          components: rustfmt
          github-token: ${{ github.token }}
      - name: Setup Node.js
        uses: ./.github/actions/node-setup
      - run: yarn install
      - name: Run rustfmt
        run: cargo fmt --all --check
      - run: yarn install
      - name: Run taplo
        run: yarn taplo format --check
  lint:
    runs-on: ubuntu-latest
    if: "!contains(github.event.head_commit.message, '[skip ci]')"
    steps:
      - name: Git checkout
        uses: actions/checkout@v4
      - name: Setup Node.js
        uses: ./.github/actions/node-setup
      - run: yarn install
      - name: Run biome
        run: yarn biome check
  test:
    if: "!contains(github.event.head_commit.message, '[skip ci]')"
    name: test (${{ matrix.settings.host }}, ${{ matrix.settings.target }})
    strategy:
      fail-fast: false
      matrix:
        settings:
          - host: macos-13
            target: x86_64-apple-darwin
            build: |-
              yarn workspaces foreach -At run build:napi --target x86_64-apple-darwin &&
              yarn workspaces foreach -Apt run build
          - host: macos-latest
            target: aarch64-apple-darwin
            build: |-
              yarn workspaces foreach -At run build:napi --target aarch64-apple-darwin &&
              yarn workspaces foreach -Apt run build
          - host: windows-latest
            target: x86_64-pc-windows-msvc
            build: |-
              yarn workspaces foreach -At run build:napi --target x86_64-pc-windows-msvc &&
              yarn workspaces foreach -Apt run build
          - host: windows-latest
            target: i686-pc-windows-msvc
            build: |-
              yarn workspaces foreach -At run build:napi --target i686-pc-windows-msvc &&
              yarn workspaces foreach -Apt run build
          - host: windows-latest
            target: aarch64-pc-windows-msvc
            build: |-
              yarn workspaces foreach -At run build:napi --target aarch64-pc-windows-msvc &&
              yarn workspaces foreach -Apt run build
          - host: ubuntu-latest
            target: x86_64-unknown-linux-gnu
            docker: ghcr.io/napi-rs/napi-rs/nodejs-rust:lts-debian
            build: |-
              rustup toolchain install stable &&
              yarn &&
              yarn workspaces foreach -At run build:napi --target x86_64-unknown-linux-gnu &&
              yarn workspaces foreach -Apt run build &&
              yarn vitest run
          - host: ubuntu-latest
            target: x86_64-unknown-linux-musl
            docker: ghcr.io/napi-rs/napi-rs/nodejs-rust:lts-alpine
            build: |-
              rustup toolchain install stable &&
              yarn &&
              yarn workspaces foreach -At run build:napi --target x86_64-unknown-linux-musl &&
              yarn workspaces foreach -Apt run build &&
              yarn vitest run
          - host: ubuntu-latest
            target: aarch64-unknown-linux-gnu
            docker: ghcr.io/napi-rs/napi-rs/nodejs-rust:lts-debian-aarch64
            build: |-
              rustup toolchain install stable &&
              yarn &&
              yarn workspaces foreach -At run build:napi --target aarch64-unknown-linux-gnu &&
              yarn workspaces foreach -Apt run build && 
              yarn vitest run
          - host: ubuntu-latest
            target: aarch64-unknown-linux-musl
            docker: ghcr.io/napi-rs/napi-rs/nodejs-rust:lts-debian-aarch64
            build: |-
              set -e &&
              rustup toolchain install stable &&
              rustup target add aarch64-unknown-linux-musl &&
              yarn &&
              yarn workspaces foreach -At run build:napi --target aarch64-unknown-linux-musl &&
              yarn workspaces foreach -Apt run build &&
              yarn vitest run
    runs-on: ${{ matrix.settings.host }}
    steps:
      - name: Git checkout
        uses: actions/checkout@v4
      - name: Setup Node.js v${{ matrix.settings.node-version }}
        uses: ./.github/actions/node-setup
        if: ${{ !matrix.settings.docker }}
      - name: Setup Rust
        uses: ./.github/actions/rust-setup
        if: ${{ !matrix.settings.docker }}
        with:
          github-token: ${{ github.token }}
          targets: ${{ matrix.settings.target }}
      - name: Setup Zig
        uses: goto-bus-stop/setup-zig@v2
        if: ${{ matrix.settings.target == 'armv7-unknown-linux-gnueabihf' || matrix.settings.target == 'armv7-unknown-linux-musleabihf' }}
        with:
          version: 0.13.0
      - run: yarn install
        if: ${{ !matrix.settings.docker }}
      - name: Run build
        if: ${{ !matrix.settings.docker }}
        run: ${{ matrix.settings.build }}
      - name: Run build & vitest
        uses: addnab/docker-run-action@v3
        if: ${{ matrix.settings.docker }}
        with:
          image: ${{ matrix.settings.docker }}
          options: '--user 0:0 -v ${{ github.workspace }}/.cargo-cache/git/db:/usr/local/cargo/git/db -v ${{ github.workspace }}/.cargo/registry/cache:/usr/local/cargo/registry/cache -v ${{ github.workspace }}/.cargo/registry/index:/usr/local/cargo/registry/index -v ${{ github.workspace }}:/build -w /build'
          run: ${{ matrix.settings.build }}
      - name: Run vitest
        if: ${{ !matrix.settings.docker }}
        run: yarn vitest run
  lint-rust:
    runs-on: ubuntu-latest
    if: "!contains(github.event.head_commit.message, '[skip ci]')"
    steps:
      - name: Git checkout
        uses: actions/checkout@v4
      - name: Setup tauri for linux
        uses: ./.github/actions/tauri-linux-setup
      - name: Setup Rust
        uses: ./.github/actions/rust-setup
        with:
          components: clippy
          github-token: ${{ github.token }}
      - name: Run clippy
        run: cargo clippy
  test-rust:
    if: "!contains(github.event.head_commit.message, '[skip ci]')"
    strategy:
      fail-fast: false
      matrix:
        settings:
          - host: macos-13
            target: x86_64-apple-darwin
          - host: macos-latest
            target: aarch64-apple-darwin
          - host: ubuntu-latest
            target: x86_64-unknown-linux-gnu
          - host: ubuntu-latest
            target: x86_64-unknown-linux-musl
          - host: windows-latest
            target: x86_64-pc-windows-msvc
    runs-on: ${{ matrix.settings.host }}
    steps:
      - name: Git checkout
        uses: actions/checkout@v4
      - if: ${{ matrix.settings.host == 'ubuntu-latest' }}
        name: Setup tauri for linux
        uses: ./.github/actions/tauri-linux-setup
      - name: Setup Rust
        uses: ./.github/actions/rust-setup
        with:
          github-token: ${{ github.token }}
      - name: Run cargo test
        run: cargo test --workspace
