name: release
on:
  push:
    branches:
      - "main"
    tags:
      - "prerelease"
      - "release"
permissions:
  attestations: write
  contents: write
  id-token: write
concurrency:
  group: release-${{ github.ref_name }}
jobs:
  build-napi:
    strategy:
      fail-fast: false
      matrix:
        settings:
          - host: macos-13
            target: x86_64-apple-darwin
            build: yarn workspaces foreach -At run build:napi --target x86_64-apple-darwin
          - host: macos-latest
            target: aarch64-apple-darwin
            build: yarn workspaces foreach -At run build:napi --target aarch64-apple-darwin
          - host: windows-latest
            build: yarn workspaces foreach -At run build:napi --target x86_64-pc-windows-msvc
            target: x86_64-pc-windows-msvc
          - host: windows-latest
            target: aarch64-pc-windows-msvc
            build: yarn workspaces foreach -At run build:napi --target aarch64-pc-windows-msvc
          - host: ubuntu-latest
            target: x86_64-unknown-linux-gnu
            docker: ghcr.io/seokju-na/webview-bundle/nodejs-rust:lts-debian
            build: |-
              rustup toolchain install stable &&
              yarn &&
              yarn workspaces foreach -At run build:napi --target x86_64-unknown-linux-gnu
          - host: ubuntu-latest
            target: x86_64-unknown-linux-musl
            docker: ghcr.io/seokju-na/webview-bundle/nodejs-rust:lts-alpine
            build: |-
              rustup toolchain install stable &&
              yarn &&
              yarn workspaces foreach -At run build:napi --target x86_64-unknown-linux-musl
          - host: ubuntu-latest
            target: aarch64-unknown-linux-gnu
            docker: ghcr.io/seokju-na/webview-bundle/nodejs-rust:lts-debian-aarch64
            build: |-
              rustup toolchain install stable &&
              yarn &&
              yarn workspaces foreach -At run build:napi --target aarch64-unknown-linux-gnu
          - host: ubuntu-latest
            target: aarch64-unknown-linux-musl
            docker: ghcr.io/seokju-na/webview-bundle/nodejs-rust:lts-alpine
            build: |-
              set -e &&
              rustup toolchain install stable &&
              rustup target add aarch64-unknown-linux-musl &&
              yarn &&
              yarn workspaces foreach -At run build:napi --target aarch64-unknown-linux-musl
    runs-on: ${{ matrix.settings.host }}
    env:
      DEBUG: 'napi:*'
      MACOSX_DEPLOYMENT_TARGET: '10.13'
    steps:
      - name: Git checkout
        uses: actions/checkout@v4
      - name: Setup tauri for linux
        if: ${{ matrix.settings.host == 'ubuntu-latest' }}
        uses: ./.github/actions/tauri-linux-setup
      - name: Setup Node.js
        uses: ./.github/actions/node-setup
      - name: Setup Rust
        uses: ./.github/actions/rust-setup
        if: ${{ !matrix.settings.docker }}
        with:
          targets: ${{ matrix.settings.target }}
      - run: yarn install
      - name: Run build (Docker)
        uses: addnab/docker-run-action@v3
        if: ${{ matrix.settings.docker }}
        with:
          image: ${{ matrix.settings.docker }}
          options: '--user 0:0 -v ${{ github.workspace }}/.cargo-cache/git/db:/usr/local/cargo/git/db -v ${{ github.workspace }}/.cargo/registry/cache:/usr/local/cargo/registry/cache -v ${{ github.workspace }}/.cargo/registry/index:/usr/local/cargo/registry/index -v ${{ github.workspace }}:/build -w /build'
          run: ${{ matrix.settings.build }}
      - name: Run build
        run: ${{ matrix.settings.build }}
        if: ${{ !matrix.settings.docker }}
        shell: bash
      - uses: extractions/setup-just@v3
      - name: Merge artifacts
        run: just xtask artifacts merge
      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: artifacts-${{ github.ref_name }}-${{ matrix.settings.host }}-${{ matrix.settings.target }}
          path: artifacts-merged
          if-no-files-found: error
  dry-run:
    runs-on: ubuntu-latest
    if: github.ref_type == 'branch'
    needs: build-napi
    steps:
      - name: Git checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: '0'
      - name: Setup tauri for linux
        uses: ./.github/actions/tauri-linux-setup
      - name: Setup Node.js
        uses: ./.github/actions/node-setup
      - run: yarn install
      - name: Setup Rust
        uses: ./.github/actions/rust-setup
      - name: Download artifacts
        uses: actions/download-artifact@v4
        with:
          pattern: artifacts-${{ github.ref_name }}-*
          merge-multiple: true
          path: artifacts-merged
      - uses: extractions/setup-just@v3
      - name: Spread artifacts
        run: just xtask artifacts spread
      - name: Dry Run
        run: just xtask release --dry-run
  prerelease:
    runs-on: ubuntu-latest
    if: github.ref_type == 'tag' && github.ref_name == 'prerelease'
    needs: build-napi
    steps:
      - name: Git checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: '0'
      - name: Setup tauri for linux
        uses: ./.github/actions/tauri-linux-setup
      - name: Setup Node.js
        uses: ./.github/actions/node-setup
      - run: yarn install
      - name: Setup Rust
        uses: ./.github/actions/rust-setup
      - name: Download artifacts
        uses: actions/download-artifact@v4
        with:
          pattern: artifacts-${{ github.ref_name }}-*
          merge-multiple: true
          path: artifacts-merged
      - uses: extractions/setup-just@v3
      - name: Spread artifacts
        run: just xtask artifacts spread
      - name: Prerelease
        run: just xtask release --prerelease=next.${{ github.run_number }} --github-token=${{ github.token }}
        env:
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
          CARGO_REGISTRY_TOKEN: ${{ secrets.CARGO_REGISTRY_TOKEN }}
  release:
    runs-on: ubuntu-latest
    if: github.ref_type == 'tag' && github.ref_name == 'release'
    needs: build-napi
    steps:
      - name: Git checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: '0'
      - name: Setup tauri for linux
        uses: ./.github/actions/tauri-linux-setup
      - name: Setup Node.js
        uses: ./.github/actions/node-setup
      - run: yarn install
      - name: Setup Rust
        uses: ./.github/actions/rust-setup
      - name: Download artifacts
        uses: actions/download-artifact@v4
        with:
          pattern: artifacts-${{ github.ref_name }}-*
          merge-multiple: true
          path: artifacts-merged
      - uses: extractions/setup-just@v3
      - name: Spread artifacts
        run: just xtask artifacts spread
      - name: Release
        run: just xtask release --github-token=${{ github.token }}
        env:
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
          CARGO_REGISTRY_TOKEN: ${{ secrets.CARGO_REGISTRY_TOKEN }}
