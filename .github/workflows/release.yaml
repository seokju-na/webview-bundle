name: Release
on:
  push:
    branches:
      - "main"
permissions:
  attestations: write
  contents: write
concurrency:
  group: release
jobs:
  build:
    if: "contains(github.event.head_commit.message, 'chore: prepare release')"
    strategy:
      fail-fast: false
      matrix:
        settings:
          - host: macos-latest
            target: x86_64-apple-darwin
            build: yarn workspaces foreach -At run build --target x86_64-apple-darwin
          - host: windows-latest
            build: yarn workspaces foreach -At run build --target x86_64-pc-windows-msvc
            target: x86_64-pc-windows-msvc
          - host: windows-latest
            build: yarn workspaces foreach -At run build --target i686-pc-windows-msvc
            target: i686-pc-windows-msvc
          - host: ubuntu-latest
            target: x86_64-unknown-linux-gnu
            docker: ghcr.io/napi-rs/napi-rs/nodejs-rust:lts-debian
            build: yarn workspaces foreach -At run build --target x86_64-unknown-linux-gnu
          - host: ubuntu-latest
            target: x86_64-unknown-linux-musl
            docker: ghcr.io/napi-rs/napi-rs/nodejs-rust:lts-alpine
            build: yarn workspaces foreach -At run build--target x86_64-unknown-linux-musl
          - host: macos-latest
            target: aarch64-apple-darwin
            build: yarn workspaces foreach -At run build --target aarch64-apple-darwin
          - host: ubuntu-latest
            target: aarch64-unknown-linux-gnu
            docker: ghcr.io/napi-rs/napi-rs/nodejs-rust:lts-debian-aarch64
            build: yarn workspaces foreach -At run build --target aarch64-unknown-linux-gnu
          - host: ubuntu-latest
            target: aarch64-unknown-linux-musl
            docker: ghcr.io/napi-rs/napi-rs/nodejs-rust:lts-alpine
            build: |-
              set -e &&
              rustup target add aarch64-unknown-linux-musl &&
              yarn workspaces foreach -At run build --target aarch64-unknown-linux-musl
          - host: windows-latest
            target: aarch64-pc-windows-msvc
            build: yarn workspaces foreach -At run build --target aarch64-pc-windows-msvc
    runs-on: ${{ matrix.settings.host }}
    steps:
      - name: Git checkout
        uses: actions/checkout@v4
      - name: Setup Node.js
        uses: ./.github/actions/node-setup
        if: ${{ !matrix.settings.docker }}
      - name: Setup Rust
        uses: ./.github/actions/rust-setup
        if: ${{ !matrix.settings.docker }}
        with:
          targets: ${{ matrix.settings.target }}
          tauri: ${{ matrix.settings.host == 'ubuntu-latest' }}
      - name: Setup Zig
        uses: goto-bus-stop/setup-zig@v2
        if: ${{ matrix.settings.target == 'armv7-unknown-linux-gnueabihf' || matrix.settings.target == 'armv7-unknown-linux-musleabihf' }}
        with:
          version: 0.13.0
      - name: Yarn setup
        uses: ./.github/actions/yarn-setup
      - name: Setup Node.js for x86
        uses: ./.github/actions/node-setup
        if: matrix.settings.target == 'i686-pc-windows-msvc'
        with:
          architecture: x86
      - name: Run build (Docker)
        uses: addnab/docker-run-action@v3
        if: ${{ matrix.settings.docker }}
        with:
          image: ${{ matrix.settings.docker }}
          options: '--user 0:0 -v ${{ github.workspace }}/.cargo-cache/git/db:/usr/local/cargo/git/db -v ${{ github.workspace }}/.cargo/registry/cache:/usr/local/cargo/registry/cache -v ${{ github.workspace }}/.cargo/registry/index:/usr/local/cargo/registry/index -v ${{ github.workspace }}:/build -w /build'
          run: ${{ matrix.settings.build }}
      - name: Run build
        run: ${{ matrix.settings.build }}
        if: ${{ !matrix.settings.docker }}
        shell: bash
      - name: Merge artifacts
        run: yarn x artifacts merge
      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: artifacts-${{ matrix.settings.host }}-${{ matrix.settings.target }}
          path: artifacts-merged
          if-no-files-found: error
  release:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Git checkout
        uses: actions/checkout@v4
      - name: Setup Node.js
        uses: ./.github/actions/node-setup
      - name: Setup Rust
        uses: ./.github/actions/rust-setup
        with:
          github-token: ${{ github.token }}
      - name: Setup Yarn
        uses: ./.github/actions/yarn-setup
      - name: Download artifacts
        uses: actions/download-artifact@v4
        with:
          pattern: artifacts-*
          merge-multiple: true
          path: artifacts-merged
      - name: Spread artifacts
        run: yarn x artifacts spread
      - name: Release
        run: yarn x release
        env:
          GITHUB_TOKEN: ${{ github.token }}
