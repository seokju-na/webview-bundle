name: Pull Request
on:
  pull_request:
    paths:
      - "crates/**"
      - "packages/**"
      - "Cargo.toml"
concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.sha }}
  cancel-in-progress: true
jobs:
  format:
    runs-on: ubuntu-latest
    if: "!contains(github.event.head_commit.message, '[skip ci]')"
    steps:
      - uses: actions/checkout@v4
      - uses: ./.github/actions/rust-setup
        with:
          components: rustfmt
          bins: taplo-cli
          github-token: ${{ secrets.GITHUB_TOKEN }}
      - run: cargo fmt --all --check
      - run: taplo format --check
  lint:
    runs-on: ubuntu-latest
    if: "!contains(github.event.head_commit.message, '[skip ci]')"
    steps:
      - uses: actions/checkout@v4
      - uses: ./.github/actions/node-setup
      - uses: ./.github/actions/yarn-setup
      - run: yarn biome check
  typecheck:
    runs-on: ubuntu-latest
    if: "!contains(github.event.head_commit.message, '[skip ci]')"
    steps:
      - uses: actions/checkout@v4
      - uses: ./.github/actions/node-setup
      - uses: ./.github/actions/yarn-setup
      - run: yarn tsc --noEmit
  test:
    runs-on: ubuntu-latest
    if: "!contains(github.event.head_commit.message, '[skip ci]')"
    steps:
      - uses: actions/checkout@v4
      - uses: ./.github/actions/node-setup
      - uses: ./.github/actions/yarn-setup
      - uses: ./.github/actions/rust-setup
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
      - run: yarn workspaces foreach -Apt run build:debug
      - run: yarn vitest run
  lint-rust:
    runs-on: ubuntu-latest
    if: "!contains(github.event.head_commit.message, '[skip ci]')"
    steps:
      - uses: actions/checkout@v4
      - uses: ./.github/actions/rust-setup
        with:
          components: clippy
          github-token: ${{ secrets.GITHUB_TOKEN }}
      - run: cargo clippy
  test-rust:
    if: "!contains(github.event.head_commit.message, '[skip ci]')"
    strategy:
      fail-fast: false
      matrix:
        settings:
          - host: macos-13
            target: x86_64-apple-darwin
          - host: macos-latest
            target: aarch64-apple-darwin
          - host: ubuntu-latest
            target: x86_64-unknown-linux-gnu
          - host: ubuntu-latest
            target: x86_64-unknown-linux-musl
          - host: windows-latest
            target: x86_64-pc-windows-msvc
    runs-on: ${{ matrix.settings.host }}
    steps:
      - uses: actions/checkout@v4
      - uses: ./.github/actions/rust-setup
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
      - run: cargo test --workspace
